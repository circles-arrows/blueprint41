<#@ template debug="false" hostspecific="true" language="C#" #>
<#@ assembly name="System.Core" #>
<#@ import namespace="System.Linq" #>
<#@ import namespace="System.IO" #>
<#@ import namespace="System.Text" #>
<#@ import namespace="System.Collections.Generic" #>
<#@ output extension=".cs" #>
<#
    string version = "v5";
#>
using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;

using Blueprint41.Async.Core;
using t = Blueprint41.Async.Neo4j.Refactoring.Templates;

namespace Blueprint41.Async.Core
{
    public class RefactorTemplates_<#= version #> : RefactorTemplates_v4
    {
<#
    foreach (string path in Directory.EnumerateFiles(Path.GetDirectoryName(Host.TemplateFile), "*.tt"))
    {
        string baseClass = "TemplateBase";
        string content = File.ReadAllText(path);
        int start = content.IndexOf("inherits=\"");
        if (start != -1)
        {
            start += 10;
            int end = content.IndexOf("\"", start);
            if (end != -1)
                baseClass = content.Substring(start, end - start);
        }

        string filename = Path.GetFileName(path);
        string name = Path.GetFileNameWithoutExtension(path);

        if (name == "RefactorTemplates")
            continue;
#>
        public override t.<#= baseClass #> <#= name #>()
        {
            t.<#= baseClass #> template = new t.<#= version #>.<#= name #>();
            template.CreateInstance = <#= name #>;
            return template;
        }
<#
    }
#>
    }
}
