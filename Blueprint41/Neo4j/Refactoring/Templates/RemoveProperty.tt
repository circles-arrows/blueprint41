<#@ template language="C#"  visibility="internal" inherits="RemovePropertyBase" #>
<#@ import namespace="System.Linq" #>
<#@ import namespace="System.Text" #>
<#@ import namespace="System.Collections.Generic" #>
<#@ import namespace="System.Diagnostics" #>
<#@ import namespace="Blueprint41" #>
<#
    Log("	executing {0} -> Remove property from {1}.{2}", this.GetType().Name, Caller.Name, Name);

    if (IsEntity)
    {
#>
MATCH (node:<#= Entity.Label.Name #>)
WHERE EXISTS(node.<#= Name #>)
WITH node LIMIT 10000
REMOVE node.<#= Name #>
<#
    }
    else if (IsRelationship)
    {
#>
MATCH (:<#= Relationship.InEntity.Label.Name #>)-[rel:<#= Relationship.Neo4JRelationshipType #>]->(:<#= Relationship.OutEntity.Label.Name #>)
WHERE EXISTS(rel.<#= Name #>)
WITH rel LIMIT 10000
REMOVE rel.<#= Name #>
<#
    }
    else
    {
        throw new NotSupportedException();
    }
#>